package org.javabip.spec;
<%var keys = Object.keys(new_dataModel);
function convertName(name){
	return name.replace(/ /g, "_").replace(/\//g, "_").replace(/\./g, "__").replace(/-/g,"_");
}
for(var i=keys.length-1; i>=0;i--){
	if(keys[i]=== '') continue;
if(new_dataModel[keys[i]]._type == "ComponentType"){
if(new_dataModel[keys[i]].forwards!=""){%>
<%- new_dataModel[keys[i]].forwards %>
<%}
}
}%>
import org.javabip.annotations.*;
import org.javabip.api.BIPSpec;
import org.javabip.api.PortType;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Ports({<%for(var i=keys.length-1; i>=0;i--){
	if(keys[i]=== '') continue;
if(new_dataModel[keys[i]]._type == "SpontaneousTransition"){ %>
@Port(name ="<%-new_dataModel[keys[i]].name %>", type = PortType.spontaneous),
<%}
if(new_dataModel[keys[i]]._type == "EnforceableTransition"){ %>
@Port(name ="<%-new_dataModel[keys[i]].name %>", type = PortType.enforceable),
<%}
}%>
})

@ComponentType(
<%for(var i=keys.length-1; i>=0;i--){
	if(keys[i]=== '') continue;
if(new_dataModel[keys[i]]._type == "InitialState"){%>
initial = "<%-new_dataModel[keys[i]].name %>",<%
}
}%>

<%for(var i=keys.length-1; i>=0;i--){
	if(keys[i]=== '') continue;
if(new_dataModel[keys[i]]._type == "ComponentType"){%>
name = "org.bip.spec.<%-new_dataModel[keys[i]].name %>")

public class <%-new_dataModel[keys[i]].name %> implements BIPSpec {
private Logger logger = LoggerFactory.getLogger(<%-new_dataModel[keys[i]].name %>.class); <%
}
}%>

<%for(var i=keys.length-1; i>=0;i--){
	if(keys[i]=== '') continue;
if(new_dataModel[keys[i]]._type == "ComponentType"){
if(new_dataModel[keys[i]].definitions!=""){%>
<%- new_dataModel[keys[i]].definitions %>

<%}%>
private String componentPath = "<%-keys[i]%>";
private String componentType = "<%-new_dataModel[keys[i]].name %>";
private Map<String, String> stateToPath = new HashMap<String, String>();
private Map<String, String> transitionToPath = new HashMap<String, String>();

<%for(var j=keys.length-1; j>=0;j--){
if(new_dataModel[keys[j]]._type== "State" || new_dataModel[keys[j]]._type== "InitialState"){%>
this.stateToPath.put("<%- new_dataModel[keys[j]].name %>","<%- keys[j]%>");
<%}
if(new_dataModel[keys[j]]._type == "EnforceableTransition" || new_dataModel[keys[j]]._type == "SpontaneousTransition" || new_dataModel[keys[j]]._type == "internal"){%>
this.transitionToPath.put("<%- new_dataModel[keys[j]].name %>","<%- keys[j]%>");
<%}
}%>

<%if(new_dataModel[keys[i]].constructors!=""){%>
<%- new_dataModel[keys[i]].constructors %>
<%}
}
}%>

<%for(var i=keys.length-1; i>=0;i--){
	if(keys[i]=== '') continue;
if(new_dataModel[keys[i]]._type == "EnforceableTransition" || new_dataModel[keys[i]]._type == "SpontaneousTransition" || new_dataModel[keys[i]]._type == "internal"){
	var key_src = new_dataModel[keys[i]].src
	var key_dst = new_dataModel[keys[i]].dst %>

@Transition(name = "<%-new_dataModel[keys[i]].name %>",source = "<%-new_dataModel[key_src].name %>",target = "<%-new_dataModel[key_dst].name %>",guard = "<%-new_dataModel[keys[i]].guardName %>")
<%-new_dataModel[keys[i]].transitionMethod%>

<%}
}%>

<%for(var i=keys.length-1; i>=0;i--){
	if(keys[i]=== '') continue;
if(new_dataModel[keys[i]]._type == "Guard"){%>
@Guard(name = "<%-new_dataModel[keys[i]].name %>")
<%-new_dataModel[keys[i]].guardMethod%> <%
}
}%>
}
